
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.io.FileWriter;
import java.io.File;

public class InventoryManager
{
 
	private String itemName;
	private String itemSup;
	private float itemCost;
	private int itemQuant;
	private Item tempItem; 
	private boolean exists;
	private String filename = "C:\\Users\\Wingman\\eclipse-workspace\\POS System\\bin\\InventoryItems.txt";
	private ArrayList<Item> itemInventory = new ArrayList<Item>(1);

	InventoryManager()
	{
		File inventory = new File(filename);
		populateInventory();
	}
  
  //specify filename for different inventories.
  InventoryManager(String filename)
  {
    this.filename = filename;
    File inventory = new File(filename);
    populateInventory();
  }
	
	public boolean checkItemInFile(Item testItem)
	{
		boolean contains = false;
		String testItemID = testItem.getID();
		for(int i = 0; i < itemInventory.size(); i++)
		{
			if(itemInventory.get(i).getID().equals(testItemID))
			{
				contains = true;
				break;
			}
		}
		return contains;
	}
  
  public void displayInventoryReport()
  {
	  populateInventory();
	  System.out.println("the following items are in inventory: ");
	    for (int i=0; i<itemInventory.size();i++)
	      {
	     System.out.println(itemInventory.get(i).toString());
	      } 
  }
    

	public void addNewToInventory(Item newItem)
	{
		if(!itemInventory.contains(newItem))
		{
		itemInventory.add(newItem);
		writeInventoryToFile();
		}
	}
  
  public void updateInventory(Item newItem, int changeQuant)
  {
	  if (itemInventory.size() == 0)
		  populateInventory();
	
	 for (int i = 0; i < itemInventory.size(); i++)
	 {
		 if ( newItem.getID().equals(itemInventory.get(i).getID()))
		 {
			 itemInventory.get(i).modifyCount(changeQuant);
			 break;
		 }	
	 }
	 writeInventoryToFile();
  }
  
	public void populateInventory()
	{
		Item tempItem; 
	    String line = "";
	    String cvsSplitBy = ",";
	    BufferedReader br = null;
	    itemInventory = new ArrayList<Item>(1);
	    
	    try {
			 br = new BufferedReader(new FileReader(filename));
	         while ((line = br.readLine()) != null) {

	             // use comma as separator
	             String[] tempInventory = line.split(cvsSplitBy);
	             
	             tempItem = new Item(tempInventory[0], tempInventory[1], Float.parseFloat(tempInventory[5]), Integer.parseInt(tempInventory[3]), Integer.parseInt(tempInventory[4]), tempInventory[2]);
	             itemInventory.add(tempItem);
	         }
			 
	        } catch (FileNotFoundException e) {
	            e.printStackTrace();
	        } catch (IOException e) {
	            e.printStackTrace();
	        } finally {
	            if (br != null) {
	                try {
	                    br.close();
	                } catch (IOException e) {
	                    e.printStackTrace();
	                }
	            }
	        }
	
	}
	
	public void writeInventoryToFile()
	{
	        try {
	        	FileWriter  pw = new FileWriter (filename,false);
	        	
	        	for (int i = 0; i < itemInventory.size(); i++)
	        		pw.append((itemInventory.get(i).toString() + "\n"));
	            
		        pw.flush();
	            pw.close();
			  } 
	      catch (FileNotFoundException e) {
				e.printStackTrace();
			  } 
	      catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			  }	
	}
  
  public String nightlyRun()
  {
	  String purchaseItems = "Item ID's in need of restock are: ";
	  
	  for (int i=0; i<itemInventory.size(); i++)
	  {
		  if (itemInventory.get(i).getCount() < itemInventory.get(i).getThreshold())
			  purchaseItems += ("\n" + itemInventory.get(i).toString());
			  //purchaseItems += (itemInventory.get(i).getID() + ", ");
	  }
	  
	  return purchaseItems;
  }
  
  public ArrayList<Item> getInventory()
  {
	  return itemInventory;
  }
	
	//TODO: for testing and debugging purposes only remove once done with project
	public static void main(String[] args) 
	{
 	InventoryManager inventory = new InventoryManager();
//    Item testItemOne = new Item("One",11.11f, 12,5, "Costco");
//    Item testItemTwo = new Item("Two",11.11f, 12,3, "Walmart");
//    Item testItemThree = new Item("Three",11.11f, 12, "McDonalds");
//    Item testItemFour = new Item("Four",11.11f, 12, "Target");
//    Item testItemFive = new Item("Five",11.11f, 12, "Cubs");
//    Item testItemSix = new Item("Six",11.11f, 12, "Lunds");
//    
//    inventory.addNewToInventory(testItemOne);
//    inventory.addNewToInventory(testItemTwo);
//    inventory.addNewToInventory(testItemThree);
//    inventory.addNewToInventory(testItemFour);
//    inventory.addNewToInventory(testItemFive);
//    inventory.addNewToInventory(testItemSix);
    
    inventory.displayInventoryReport();
 	System.out.println(inventory.nightlyRun());
 	Item updateOne = new Item("67111115791101010", 2);
 	Item updateTwo = new Item("779968841041142", 2);
    inventory.updateInventory(updateOne, -9999);
    inventory.updateInventory(updateTwo, -9999);
    inventory.displayInventoryReport();
  }	 	
	



  
}


